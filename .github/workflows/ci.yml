on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        os: 
          # - ubuntu-latest - todo: fix clang-cl under ubuntu builds
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          targets: x86_64-pc-windows-msvc
      - uses: Swatinem/rust-cache@v2
      - run: |
          sudo dpkg --add-architecture i386
          wget -qO - https://dl.winehq.org/wine-builds/winehq.key | sudo apt-key add -
          sudo apt-add-repository "deb https://dl.winehq.org/wine-builds/ubuntu $(lsb_release -cs) main"
          sudo apt install --install-recommends winehq-stable lld clang-tools
          set -eux
          cargo install xwin

          xwin --accept-license splat --output "${{ github.workspace }}/xwin"
          echo "CFLAGS_x86_64_pc_windows_msvc=$CL_FLAGS" >> "$GITHUB_ENV"
          echo "CXXFLAGS_x86_64_pc_windows_msvc=$CL_FLAGS" >> "$GITHUB_ENV"
          echo "CC_x86_64_pc_windows_msvc=clang-cl" >> "$GITHUB_ENV"
          echo "CXX_x86_64_pc_windows_msvc=clang-cl" >> "$GITHUB_ENV"
          cat > ~/.cargo/config.toml <<EOF
            [target.x86_64-pc-windows-msvc]
            linker = "lld-link"
            runner = ["env", "WINEDEBUG=-all", "wine"]
            rustflags = [
                "-Lnative=${{ github.workspace }}/xwin/crt/lib/x86_64",
                "-Lnative=${{ github.workspace }}/xwin/sdk/lib/um/x86_64",
                "-Lnative=${{ github.workspace }}/xwin/sdk/lib/ucrt/x86_64",
                "-C",
                "target-feature=+crt-static",
                "--cfg", "windows_raw_dylib",
                "--cfg", "windows_debugger_visualizer"
            ]
          EOF
        if: matrix.os == 'ubuntu-latest'
        env:
          CL_FLAGS: >-
            -Wno-unused-command-line-argument -fuse-ld=lld-link 
            /imsvc${{ github.workspace }}/xwin/crt/include 
            /imsvc${{ github.workspace }}/xwin/sdk/include/ucrt 
            /imsvc${{ github.workspace }}/xwin/sdk/include/um 
            /imsvc${{ github.workspace }}/xwin/sdk/include/shared 
            /EHsc"
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Install cargo-nextest
        uses: taiki-e/install-action@cargo-nextest
      - name: Build | Test
        run: |
          cargo llvm-cov --workspace --locked nextest
          cargo llvm-cov --locked report --codecov --output-path codecov.json
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          files: ./target/nextest/default/junit.xml
          name: me3-windows-test-results
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: codecov.json
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}