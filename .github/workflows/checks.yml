name: Checks
on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

env:
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTUP_MAX_RETRIES: 10
  CLICOLOR: 1

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  check-spelling:
    name: Check spelling
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout Actions Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Spell Check Repo
        uses: crate-ci/typos@0f0ccba9ed1df83948f0c15026e4f5ccfce46109 # v1.32.0
  check-dead-links:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: tcort/github-action-markdown-link-check@a800ad5f1c35bf61987946fd31c15726a1c9f2ba # v1.1.0

  check_if_config_schema_up_to_date:
    name: Check if config schema is up to date
    runs-on: windows-latest
    permissions:
      checks: write
      contents: read
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup | Rust
        uses: dtolnay/rust-toolchain@nightly

      - name: Run | Generate Schema
        run: cargo run --locked --package me3-mod-protocol --bin schema > schemas/mod-profile.json

      - name: Check | Detect Changes
        uses: reviewdog/action-suggester@4747dbc9f9e37adba0943e681cc20db466642158 # v1.21.0
        with:
          tool_name: me3-mod-protocol schema
          filter_mode: nofilter
          fail_level: any

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
      security-events: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: ./.github/actions/setup-windows-toolchain
      - uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: nightly
          targets: x86_64-pc-windows-msvc
          components: clippy

      - uses: taiki-e/install-action@2ee2c006bbe55b0c2924d63f440aa76ecdd09aea # v2.52.3
        with:
          tool: clippy-sarif, sarif-fmt
      - run: cargo clippy --workspace --all-targets --all-features --message-format=json -- -Aunused | clippy-sarif | tee results.sarif | sarif-fmt
        shell: bash

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@ff0a06e83cb2de871e5a09832bc6a81e7276941f # v3.28.18
        with:
          sarif_file: results.sarif

  fmt:
    permissions:
      contents: read
    name: Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
          targets: x86_64-pc-windows-msvc
      - run: cargo +nightly fmt --all --check
