#!/bin/bash

set -x

trap "git worktree remove mkrelease || true" EXIT

git fetch origin main
git worktree add -B "release-prep" mkrelease origin/main
(
    pushd mkrelease || exit 1

    git fetch origin --tags
    release_notes=$(git cliff --unreleased --strip all)
    version=$(cargo pkgid -p me3-mod-host | cut -d '@' -f2)
    version=${version%"-prerelease"}
    tag_name="v$version"

    if git rev-parse "$tag_name" >/dev/null 2>&1; then
        git tag -d "$tag_name"
    fi

    git branch -m "release-$tag_name" -f
    git cliff --tag "$tag_name" --unreleased -o CHANGELOG.md

    sed -i "
/ (Latest)/{
  i\\
        - ${tag_name} (Latest)
  s/ (Latest)//
}
" .github/ISSUE_TEMPLATE/bug-report.yml

    tag_sha=$(git rev-parse --verify HEAD)
    read -r -d '' tag_command_template <<'EOF'
---
### Create and publish the tag:

```
./releng/bin/create-release "$TAG_SHA"
```
EOF

    cargo set-version "$version"
    git add .github Cargo.toml Cargo.lock CHANGELOG.md && git commit-m "release: $version"

    echo "$tag_command_template"
    tag_command=$(TAG_NAME="$tag_name" TAG_SHA="$tag_sha" envsubst <<<"$tag_command_template")

    new_version=$(cargo pkgid -p me3-mod-host | cut -d '@' -f2)
    v=("${version//./ }")
    ((v[1]++))

    cargo set-version "${v[0]}.${v[1]}.${v[2]}-prerelease"

    git add Cargo.* && git commit -m "chore: start $new_version development"

    if [ -n "$RELEASE_PUSH" ]; then
        git push origin "HEAD:release-$tag_name" --force

        if ! gh pr view; then
            gh pr create -B main -b "$release_notes\n$tag_command" --title "chore(release): $version"
        else
            gh pr edit -B main -b "$release_notes\n$tag_command" --title "chore(release): $version"
        fi
    fi
)
